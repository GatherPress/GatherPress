name: Preview Playground comment

on:
  pull_request:
    types: [opened, synchronize]
permissions:
  pull-requests: write

jobs:
  handle-pr-comment:
    runs-on: ubuntu-latest
    # needs: check-for-changes-to-themes
    steps:
      # - name: Checkout create-preview-links script from trunk
      #   uses: actions/checkout@v3
      #   with:
      #     repository: Automattic/themes
      #     sparse-checkout: .github/scripts/create-preview-links
      #     ref: trunk
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add Preview Links comment
        id: comment-on-pr
        # if: ${{ needs.check-for-changes-to-themes.outputs.HAS_THEME_CHANGES == 'true' }}
        uses: actions/github-script@v7
        # env:
          # CHANGED_THEMES: ${{ needs.check-for-changes-to-themes.outputs.CHANGED_THEMES }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const createPreviewLinks = require('.github/scripts/create-preview-links');
            createPreviewLinks(github, context);
          # createPreviewLinks(github, context, process.env.CHANGED_THEMES);

      # - name: Remove comment if no changes are detected
      #   if: ${{ needs.check-for-changes-to-themes.outputs.HAS_THEME_CHANGES == 'false' }}
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const { data: comments } = await github.rest.issues.listComments({
      #         issue_number: context.payload.pull_request.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo
      #       });
            
      #       const existingComment = comments.find(comment => comment.user.login === 'github-actions[bot]' && comment.body.startsWith('### Preview changes'));
            
      #       if (existingComment) {
      #         await github.rest.issues.deleteComment({
      #           comment_id: existingComment.id,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo
      #         });
      #       }
  