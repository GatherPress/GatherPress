name: E2E Tests

on:
    workflow_dispatch:
    pull_request:

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true


jobs:
    e2e-tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            # matrix:
            #     node: ['14']

        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - uses: actions/cache@v4
          id: playwright-cache
          with:
            path: |
              ~/.cache/ms-playwright
            key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version-file: '.nvmrc'
            cache: npm

        # Creating a short lived node_modules cache
        # to be used accross one workflow attempt.
        # https://github.com/actions/cache/blob/main/caching-strategies.md#creating-a-short-lived-cache
        - uses: actions/cache@v4
          id: node_modules-cache
          with:
            path: |
              ./node_modules
            key: ${{ runner.os }}-node_modules-${{ github.sha }}-${{ hashFiles('package-lock.json') }}
            restore-keys: |
                    ${{ runner.os }}-node_modules-${{ github.sha }}-

        - name: NPM install
          if: steps.node_modules-cache.outputs.cache-hit != 'true'
          run: npm ci

        - name: Build plugin
          run: |
            npm run build

        - name: Install Playwright dependencies
          run: npx playwright install --with-deps
          if: steps.playwright-cache.outputs.cache-hit != 'true'
        - run: npx playwright install-deps
          if: steps.playwright-cache.outputs.cache-hit == 'true'

        - name: Starting the WordPress Environment
          run: |
                npm run wp-env start

        - name: Running the tests
          # env:
          #     WP_AUTH_STORAGE: artifacts/storage-states/admin.json
          #     WP_BASE_URL: http://localhost:8889
          #     WP_USERNAME: admin
          #     WP_PASSWORD: password
          run: |
                npm run test:e2e

        - name: Retain failed test results
          uses: actions/upload-artifact@v3
          if: failure()
          with:
            name: test-results-matrix-less-debugging
            path: artifacts/test-results/
